<login>
    <div class="ui card">
        <h2>猫カフェ</h2>
        <div class="ui form">
            <form onsubmit={ handleSubmit }>
                <div class="field { errors.username && 'error' }">
                    <div class="ui left icon input">
                        <i class="user icon"></i>
                        <input
                                type="text"
                                name="username"
                                placeholder="Enter Username"
                                oninput={ handleInputUsername }
                        />
                    </div>
                    <su-validation-error name="username" errors="{ errors }" />
                </div>
                <div class="field { errors.password && 'error' }">
                    <div class="ui left icon input">
                        <i class="lock icon"></i>
                        <input
                                type="password"
                                name="password"
                                placeholder="Enter Password"
                                oninput={ handleInputPassword }
                        />
                    </div>
                    <su-validation-error name="password" errors="{ errors }" />
                </div>
                <div class="inline field">
                    <su-checkbox>Remember Me</su-checkbox>
                </div>

                <div class="inline field">
                    <button class="ui teal button">Login</button>
                </div>
            </form>
            <div class="menu">
                <su-dropdown items={ dropdownItems } onchange={ handleChange }></su-dropdown>
            </div>
        </div>
    </div>
    <div class="ui card">
        // お知らせ、イベント、FAQ、お問い合わせ
        <table
                is="su-table"
                class="ui sortable celled table" data={ tableData } default-sort-field="age" nulls-first={ true }>
            <thead>
            <tr>
                <th is="su-th" field="name">NAME</th>
            </tr>
            </thead>
            <tbody>
            <tr each="{ item in tableData }">
                <td>{ item.name }</td>
            </tr>
            </tbody>
        </table>
    </div>


    <script>
        import { router } from '@riotjs/route'
        const errorMessages = {
            username: ['The username field is required.'],
            password: ['The password field is required.']
        }
        export default {
            onBeforeMount() {
            },
            errors: {
                username: '',
                password: ''
            },
            handleInputUsername(e) {
                if (e.target.value.length > 0)
                    this.errors.username = ""
                else
                    this.errors.username = errorMessages.username
                this.update()
            },
            handleInputPassword(e) {
                if (e.target.value.length > 0)
                    this.errors.password = ""
                else
                    this.errors.password = errorMessages.password
                this.update()
            },
            handleSubmit(e) {
                e.preventDefault()
                const inputUsername = e.target.username.value
                const inputPassword = e.target.password.value
                if (inputUsername.length > 0 && inputPassword.length > 0) {
                    this.service.login()
                } else {
                    if (inputUsername.length === 0)
                        this.errors.username = errorMessages.username
                    if (inputPassword.length === 0)
                        this.errors.password = errorMessages.password
                    this.update()
                }
            },
            dropdownItems: [
                {
                    label: '店舗',
                    value: null,
                    default: true
                },
                {
                    label: '東京',
                    value: '/'
                },
                {
                    label: '御茶ノ水',
                    value: '/logout'
                }
            ],
            handleChange(e) {
                this.router.push(e.value)
            },
            tableData: [
                { name: 'John', age: 15, gender: 'Male' },
                { name: 'Amber', age: 40, gender: 'Female' },
            ]
        }
    </script>

    <style>
        :host {
            max-width: 80%;
            height: 100vh;
            margin: 0 auto;
            text-align: center;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        h2 {
            font-size: 2rem;
        }
        .ui.card {
            padding: 3rem;
            width: 50%;
        }
        @media (max-width: 375px) {
            .ui.card {
                width: 100%;
            }
        }
    </style>

</login>
<app>
    <welcome if={ !state.isStoreSelectedIn }/>
    <div id="wrapper" if={ state.isStoreSelectedIn }>
        <router base={ base }>
            <sidebar/>
            <app-header/>
            <div id="container">
                <app-router/>
            </div>
            <app-footer/>
        </router>
    </div>

    <script>
        import Welcome from './components/welcome.riot'
        import Sidebar from './components/app-sidebar.riot'
        import AppHeader from './components/app-header.riot'
        import AppFooter from './components/app-footer.riot'
        import AppRouter from './components/app-router.riot'
        export default {
            components: {
                Welcome,
                Sidebar,
                AppHeader,
                AppFooter,
                AppRouter,
            },
            state: {
                isStoreSelectedIn: false,
                stores_id: null
            },
            base: window.location.origin,
            onBeforeMount(props, state) {
                const beforeCatCafeSiteState = JSON.parse(localStorage.getItem('cat-cafe-site state'))
                if (beforeCatCafeSiteState !== null) {
                    state.isStoreSelectedIn = beforeCatCafeSiteState.isStoreSelectedIn
                    state.storesId = beforeCatCafeSiteState.storesId
                } else {
                    state.isStoreSelectedIn = props.isStoreSelectedIn
                    state.storesId = props.storesId
                }
            },
            onMounted(props, state) {
            },
            onUpdated(props, state) {
                localStorage.setItem('cat-cafe-site state', JSON.stringify(state))
            },
            onBeforeUnmount() {
                this.router.end()
            }
        }
    </script>

    <style>
        :host {
            font-family: Futura;
            height: 100%;
        }

        #wrapper {
            margin-left: 20%;
            min-height: 100%;
            display: flex;
            flex-direction: column;
        }

        #container {
            flex: 1;
            background: #eee;
            padding: 2rem;
        }
    </style>
</app>